{
    "swagger": "2.0",
    "info": {
        "title": "Encounter",
        "description": "The Encounters service",
        "version": "1.0.0"
    },
    "host": "api.spectrumhealth.org",
    "basePath": "/appointment",
    "schemes": [
        "http",
        "https"
    ],
    "produces": [
        "application/json",
        "text/plain"
    ],
    "paths": {
        "/getEncountersByCpi": {
            "get": {
                "summary": "Patient Encounters",
                "description": "The Encounters endpoint returns all encounters for a given patient.\nThe response includes all past and future encounters from the\ninpatient, outpatient, and emergency settings.\n",
                "parameters": [
                    {
                        "name": "cpi",
                        "in": "query",
                        "description": "Patient identification number.",
                        "required": true,
                        "type": "number",
                        "format": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The date (in seconds since epoch) from which you want to start looking for encounters.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "The date (in seconds since epoch) from which you want to stop looking for encounters.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of encounters",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Encounters"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/getEncounterById": {
            "get": {
                "summary": "Patient Encounters",
                "description": "The Encounters endpoint returns all encounters for a given patient.\nThe response includes all past and future encounters from the\ninpatient, outpatient, and emergency settings.\n",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "body",
                        "description": "Encounter identifier.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Identifier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An appointment",
                        "schema": {
                            "$ref": "#/definitions/Encounter"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/getEncountersByDepartmentId": {
            "get": {
                "summary": "Patient Appointments",
                "description": "The Encounters endpoint returns all encounters for a given department.\nThe response includes all past and future encounters from the\ninpatient, outpatient, and emergency settings.\n",
                "parameters": [
                    {
                        "name": "departmentId",
                        "in": "query",
                        "description": "Department identification number.",
                        "required": true,
                        "type": "number",
                        "format": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The date (in seconds since epoch) from which you want to start looking for appointments.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "The date (in seconds since epoch) from which you want to stop looking for appointments.",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/getAppointmentsByCpi": {
            "get": {
                "summary": "Patient Appointments",
                "description": "The Appointment endpoint returns all encounters for a given patient.\nThe response includes all past and future encounters from the\ninpatient, outpatient, and emergency settings.\n",
                "parameters": [
                    {
                        "name": "cpi",
                        "in": "query",
                        "description": "Patient identification number.",
                        "required": true,
                        "type": "number",
                        "format": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The date (in seconds since epoch) from which you want to start looking for appointments.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "The date (in seconds since epoch) from which you want to stop looking for appointments.",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/getAppointmentsByCpis": {
            "get": {
                "summary": "Patient Appointments",
                "description": "The Appointment endpoint returns all encounters for the given patient(s).\nThe response includes all past and future encounters from the\ninpatient, outpatient, and emergency settings.\n",
                "parameters": [
                    {
                        "name": "cpis",
                        "in": "query",
                        "description": "Patient identification number(s).",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "number",
                            "format": "string"
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The date (in seconds since epoch) from which you want to start looking for appointments.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "The date (in seconds since epoch) from which you want to stop looking for appointments.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An array of appointments",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Appointments"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Appointments",
                "description": "Update and Existing Appointment",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Identifier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Appointment"
                        }
                    }
                }
            }
        },
        "/getAppointmentById": {
            "get": {
                "summary": "Patient Appointment",
                "description": "The Appointment endpoint returns all encounters for a given patient.\nThe response includes all past and future encounters from the\ninpatient, outpatient, and emergency settings.\n",
                "parameters": [
                    {
                        "name": "identifier",
                        "in": "body",
                        "description": "Appointment identifier.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Identifier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An appointment",
                        "schema": {
                            "$ref": "#/definitions/Appointment"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "summary": "alskdjf",
                "description": "sadfasdfas'\n",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "sdfasdfasdf",
                        "schema": {
                            "$ref": "#/definitions/Identifier"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "$ref": "#/definitions/Appointment"
                        }
                    }
                }
            }
        },
        "/getAppointmentsByDepartmentId": {
            "get": {
                "summary": "Patient Appointments",
                "description": "The Appointment endpoint returns all encounters for a given department.\nThe response includes all past and future encounters from the\ninpatient, outpatient, and emergency settings.\n",
                "parameters": [
                    {
                        "name": "departmentId",
                        "in": "query",
                        "description": "Department identification number.",
                        "required": true,
                        "type": "number",
                        "format": "string"
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "The date (in seconds since epoch) from which you want to start looking for appointments.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "The date (in seconds since epoch) from which you want to stop looking for appointments.",
                        "required": true,
                        "type": "string"
                    }
                ]
            }
        },
        "/appointment": {
            "get": {
                "summary": "Get appointments by an id",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body"
                    },
                    {
                        "name": "cpi",
                        "in": "query",
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "#/definitions/Appointment"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Encounters": {
            "type": "object",
            "properties": {
                "encounter": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Encounter"
                    }
                }
            }
        },
        "Encounter": {
            "type": "object",
            "properties": {
                "identifier": {
                    "$ref": "#/definitions/Identifier"
                },
                "encounterStatus": {
                    "$ref": "#/definitions/EncounterStatus"
                },
                "classValue": {
                    "$ref": "#/definitions/Class"
                },
                "type": {
                    "description": "Specific type of appointment",
                    "type": "string"
                },
                "patient": {
                    "$ref": "#/definitions/Identifier"
                },
                "providers": {
                    "type": "object",
                    "properties": {
                        "provider": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Provider"
                            }
                        }
                    }
                },
                "appointment": {
                    "$ref": "#/definitions/Identifier"
                },
                "period": {
                    "$ref": "#/definitions/Period"
                },
                "reason": {
                    "description": "Reason the appointment takes place",
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/Location"
                },
                "extensions": {
                    "$ref": "#/definitions/EncounterExtensions"
                }
            }
        },
        "EncounterStatus": {
            "description": "The calculated status of the appointment",
            "enum": [
                "PLANNED",
                "ARRIVED",
                "CANCELED",
                "FINISHED",
                "OTHER"
            ],
            "type": "string"
        },
        "Class": {
            "description": "Encounter class values derived from FHIR specification https://www.hl7.org/fhir/valueset-appointment-class.html",
            "enum": [
                "INPATIENT",
                "OUTPATIENT",
                "AMBULATORY",
                "EMERGENCY",
                "HOME",
                "FIELD",
                "DAYTIME",
                "VIRTUAL",
                "OTHER"
            ],
            "type": "string"
        },
        "Appointments": {
            "type": "object",
            "properties": {
                "appointment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Appointment"
                    }
                }
            }
        },
        "Appointment": {
            "type": "object",
            "properties": {
                "identifier": {
                    "$ref": "#/definitions/Identifier"
                },
                "appointmentStatus": {
                    "$ref": "#/definitions/AppointmentStatus"
                },
                "type": {
                    "description": "The type of the appointment",
                    "type": "string"
                },
                "patient": {
                    "$ref": "#/definitions/Identifier"
                },
                "description": {
                    "description": "Shown on a subject line in a meeting request, or appointment list",
                    "type": "string"
                },
                "start": {
                    "description": "When appointment is to take place",
                    "type": "string"
                },
                "end": {
                    "format": "date-time",
                    "description": "When appointment is to conclude",
                    "type": "string"
                },
                "minutesDuration": {
                    "description": "Can be less than start/end (e.g. estimate)",
                    "type": "integer"
                },
                "providers": {
                    "type": "object",
                    "properties": {
                        "provider": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Provider"
                            }
                        }
                    }
                },
                "location": {
                    "$ref": "#/definitions/Location"
                },
                "extensions": {
                    "$ref": "#/definitions/AppointmentExtensions"
                }
            }
        },
        "AppointmentStatus": {
            "description": "The calculated status of the appointment",
            "enum": [
                "SCHEDULED",
                "COMPLETED",
                "CANCELED",
                "NO_SHOW",
                "LEFT_WITHOUT_SEEN",
                "CHECKED_IN",
                "CHECKED_OUT",
                "RESCHEDULED",
                "CONFIRMED",
                "PENDING",
                "OTHER"
            ],
            "type": "string"
        },
        "Period": {
            "description": "The start and end time of the event. https://www.hl7.org/fhir/datatypes.html#Period",
            "type": "object",
            "properties": {
                "start": {
                    "description": "Starting time with inclusive boundary.",
                    "type": "string"
                },
                "end": {
                    "description": "End time with inclusive boundary, if not ongoing",
                    "type": "string"
                }
            }
        },
        "Location": {
            "type": "object",
            "properties": {
                "identifier": {
                    "$ref": "#/definitions/Identifier"
                },
                "address": {
                    "$ref": "#/definitions/Address"
                },
                "name": {
                    "type": "string"
                },
                "room": {
                    "type": "string"
                },
                "bed": {
                    "type": "string"
                },
                "bedPhoneNumber": {
                    "type": "string"
                }
            }
        },
        "Address": {
            "type": "object",
            "properties": {
                "addressLine1": {
                    "type": "string"
                },
                "addressLine2": {
                    "type": "string"
                },
                "addressType": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "county": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "zipCode": {
                    "type": "string"
                }
            }
        },
        "Provider": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/ProviderType"
                },
                "role": {
                    "type": "string"
                },
                "identifiers": {
                    "type": "object",
                    "properties": {
                        "identifier": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Identifier"
                            }
                        }
                    }
                },
                "isDisplayProvider": {
                    "type": "boolean"
                }
            }
        },
        "ProviderType": {
            "description": "The available Provider type",
            "enum": [
                "SCHEDULING",
                "REFERRING",
                "TREATMENT_TEAM",
                "CARE_TEAM",
                "ATTENDING",
                "ADMITTING",
                "SURGEON",
                "PRIMARY_CARE_PROVIDER",
                "OTHER"
            ],
            "type": "string"
        },
        "Identifier": {
            "description": "Associated Ids for this item",
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "system": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "EncounterExtensions": {
            "type": "object",
            "properties": {
                "toggles": {
                    "$ref": "#/definitions/EncounterToggles"
                },
                "guarantor": {
                    "$ref": "#/definitions/Guarantor"
                },
                "insuranceCoverage": {
                    "$ref": "#/definitions/InsuranceCoverage"
                },
                "patientDisplayName": {
                    "type": "string"
                },
                "clinicalDocumentHandles": {
                    "type": "object",
                    "properties": {
                        "clinicalDocumentHandle": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ClinicalDocumentHandle"
                            }
                        }
                    }
                }
            }
        },
        "AppointmentExtensions": {
            "type": "object",
            "properties": {
                "toggles": {
                    "$ref": "#/definitions/AppointmentToggles"
                },
                "cancelContactId": {
                    "type": "string"
                },
                "eCheckinStatus": {
                    "$ref": "#/definitions/eCheckinStatus"
                },
                "confirmedStatus": {
                    "$ref": "#/definitions/ConfirmedStatus"
                },
                "patientInstructions": {
                    "$ref": "#/definitions/PatientInstructions"
                },
                "patientArrivalTimeOffset": {
                    "type": "string"
                },
                "patientDisplayName": {
                    "type": "string"
                },
                "waitLists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Waitlist"
                    }
                },
                "questionnaires": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Questionnaire"
                    }
                }
            }
        },
        "PatientInstructions": {
            "description": "Instructions meant specifically for the patient.",
            "type": "object",
            "properties": {
                "preArrivalInstructions": {
                    "type": "string"
                },
                "preBookingInstructions": {
                    "type": "string"
                }
            }
        },
        "eCheckinStatus": {
            "enum": [
                "NOT_OFFERED",
                "NOT_YET_AVAILABLE",
                "NOT_STARTED",
                "IN_PROGRESS",
                "COMPLETED",
                "NOT_NEEDED",
                "FILTERED",
                "OTHER"
            ],
            "type": "string"
        },
        "ConfirmedStatus": {
            "enum": [
                "CONFIRMED",
                "NOT_CONFIRMED",
                "REMOVED",
                "OTHER"
            ],
            "type": "string"
        },
        "EncounterToggles": {
            "description": "Toggles are enterprise decisions which represent triggers to act upon within consumers.",
            "type": "object",
            "properties": {
                "isTimeViewable": {
                    "description": "This toggle indicates when a patient facing application should make the time of an appointment viewable to the patient (eg. A surgical appointment scheduled at 3:00pm but the patient should actually arrive at 1:00pm for surgical-prep).",
                    "type": "boolean"
                },
                "isPatientViewable": {
                    "description": "Whether this appointment can be shown to the patient at all.",
                    "type": "boolean"
                },
                "isLocationViewable": {
                    "description": "Whether or not the location should be shown for this event. This mainly pertains to video visits.",
                    "type": "boolean"
                }
            }
        },
        "AppointmentToggles": {
            "description": "Toggles are enterprise decisions which represent triggers to act upon within consumers.",
            "type": "object",
            "properties": {
                "isTimeViewable": {
                    "description": "Whether or not the time should be shown to the patient",
                    "type": "boolean"
                },
                "isVideoVisit": {
                    "description": "Whether or not this appointment is an e-visit",
                    "type": "boolean"
                },
                "isECheckinViewable": {
                    "description": "Whether or not this appointment can be e-checked in, and whether it should be shown to the patient",
                    "type": "boolean"
                },
                "isConfirmable": {
                    "type": "boolean"
                },
                "isPatientViewable": {
                    "description": "Whether this appointment can be shown to the patient at all",
                    "type": "boolean"
                },
                "isWaitListed": {
                    "description": "Whether or not this appointment has been wait-listed",
                    "type": "boolean"
                },
                "isCancelable": {
                    "description": "Whether or not this appointment can be canceled",
                    "type": "boolean"
                },
                "isLocationViewable": {
                    "description": "Whether or not the location should be shown for this event. This mainly pertains to video visits.",
                    "type": "boolean"
                }
            }
        },
        "Guarantor": {
            "type": "object",
            "properties": {
                "identifier": {
                    "$ref": "#/definitions/Identifier"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "relationshipToPatient": {
                    "type": "string"
                }
            }
        },
        "InsuranceCoverage": {
            "type": "object",
            "properties": {
                "identifier": {
                    "$ref": "#/definitions/Identifier"
                },
                "plan": {
                    "type": "string"
                },
                "payor": {
                    "type": "string"
                },
                "contractNumber": {
                    "type": "string"
                },
                "groupNumber": {
                    "type": "string"
                },
                "subscriber": {
                    "$ref": "#/definitions/Subscriber"
                }
            }
        },
        "Subscriber": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "relationshipToPatient": {
                    "type": "string"
                }
            }
        },
        "Waitlist": {
            "type": "object",
            "properties": {
                "waitListStatus": {
                    "$ref": "#/definitions/WaitListStatus"
                },
                "isAvailable": {
                    "type": "boolean"
                },
                "offerDateTime": {
                    "type": "string"
                },
                "offerResolvedDateTime": {
                    "type": "string"
                },
                "offerSentDateTime": {
                    "type": "string"
                },
                "offerViewedDateTime": {
                    "type": "string"
                }
            }
        },
        "WaitListStatus": {
            "enum": [
                "ACTIVE",
                "ACCEPTED",
                "DECLINED",
                "EXPIRED",
                "UNAVAILABLE",
                "DELETED",
                "OTHER"
            ],
            "type": "string"
        },
        "Questionnaire": {
            "type": "object",
            "properties": {
                "context": {
                    "$ref": "#/definitions/QuestionnaireContext"
                },
                "name": {
                    "description": "Name of questionnaire from Epic",
                    "type": "string"
                },
                "questionnaireStatus": {
                    "$ref": "#/definitions/QuestionnaireStatus"
                },
                "type": {
                    "$ref": "#/definitions/Type"
                },
                "identifiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Identifier"
                    }
                }
            }
        },
        "QuestionnaireStatus": {
            "description": "The possible statuses, as documented by Epic - https://datahandbook.epic.com/WebServices/Details/3059381",
            "enum": [
                "NEW",
                "IN_PROGRESS",
                "REVIEWABLE",
                "COMPLETED",
                "OTHER"
            ],
            "type": "string"
        },
        "Type": {
            "description": "The possible types, as documented by Epic - https://datahandbook.epic.com/WebServices/Details/3059381",
            "enum": [
                "GENERAL",
                "HISTORY",
                "OTHER"
            ],
            "type": "string"
        },
        "QuestionnaireContext": {
            "description": "Questionnaire context that will enable deep linking into the datatile",
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "ClinicalDocumentHandle": {
            "description": "Clinical Document Handle will allow user to call the clinical-DocumentService to get documents corresponding to the encounter.",
            "type": "object",
            "properties": {
                "cpi": {
                    "type": "string"
                },
                "documentId": {
                    "type": "string"
                },
                "documentType": {
                    "$ref": "#/definitions/ClinicalDocumentType"
                },
                "sourceSystem": {
                    "type": "string"
                }
            }
        },
        "ClinicalDocumentType": {
            "description": "The possible types found in the clinical-DocumentService - https://jira.internal.priority-health.com/stash/projects/EWS/repos/clinical-document/browse/clinical-documentservice/src/main/java/org/spectrumhealth/ws/enterprise/clinicaldocument/model/DocumentType.java",
            "enum": [
                "AFTER_VISIT_SUMMARY",
                "INPATIENT_AVS_GENERAL",
                "INPATIENT_AVS_OB_DELIVERED",
                "INPATIENT_AVS_OB_UNDELIVERED",
                "INPATIENT_DAY_AT_A_GLANCE",
                "SURGICAL_AVS",
                "EMERGENCY_AVS",
                "PATIENT_DEPART_SUMMARY",
                "CONTINUITY_OF_CARE",
                "PATIENT_HEALTH_SUMMARY",
                "TRANSITION_OF_CARE",
                "AMBULATORY_SUMMARY"
            ],
            "type": "string"
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "format": "int32",
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    }
}